# Generated by Django 5.1.2 on 2025-01-17 03:27

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0004_order_cancelled_at_order_refund_amount_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Amount in original currency before conversion', max_digits=10)),
                ('base_currency', models.CharField(default='USD', help_text='Base currency (USD)', max_length=3)),
                ('payment_currency', models.CharField(help_text='Currency used for payment', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, help_text='Exchange rate to USD', max_digits=10)),
                ('reference', models.CharField(help_text='internal payment reference', max_length=200, unique=True)),
                ('provider_reference', models.CharField(blank=True, help_text="payment provider's reference", max_length=200, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(default='card', max_length=50)),
                ('meta_data', models.JSONField(blank=True, help_text='Additional payment metadata', null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(help_text='Payment validity period')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='orders.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('initialize', 'Payment Initialized'), ('verify', 'Payment Verification'), ('success', 'Payment Successful'), ('failure', 'Payment Failed'), ('refund', 'Payment Refunded'), ('webhook', 'Webhook Received'), ('retry', 'Payment Retry'), ('expire', 'Payment Expired')], max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(help_text='Status returned by payment provider', max_length=50)),
                ('provider_reference', models.CharField(blank=True, max_length=200, null=True)),
                ('response_data', models.JSONField(blank=True, help_text='Full response from payment provider', null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payments.payment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference'], name='payments_pa_referen_75358f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_343680_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['order', 'status'], name='payments_pa_order_i_a76289_idx'),
        ),
    ]
